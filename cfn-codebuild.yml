AWSTemplateFormatVersion: '2010-09-09'
Description:
  CodeCommit Create
# ------------------------------------------------------------#
#  Metadata
# ------------------------------------------------------------#
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Lambda Configuration"
        Parameters:
        - BuildName
        - PACKAGED_TEMPLATE_FILE_PATH
        - BuildSpec
        - ArtifactStoreBucket
        - ModuleNameOwner
        - DevModuleStackName
        - DevDeployParamFile
# ------------------------------------------------------------#
#  InputParameters
# ------------------------------------------------------------#
Parameters:
  BuildName:
    Type: String
    Default: cfn-codecommit-inamura
  PACKAGED_TEMPLATE_FILE_PATH:
    Type: String
    Default: packaged.yml
  BuildSpec:
    Type: String
    Default: pipeline_settings/buildspec.yml
  ArtifactStoreBucket:
    Type: String
    Default: cfn-s3-20230103-inamura
  ModuleNameOwner:
    Type: String
    Default: cfn-codepipeline-inamura
  DevModuleStackName:
    Type: String
    Default: cfn-dev-codepipeline-inamura
  DevDeployParamFile:
    Type: String
    Default: param_dev.json

# ------------------------------------------------------------#
#  Resources
# ------------------------------------------------------------#
Resources:
# ------------------------------------------------------------#
#  CodeBuild
# ------------------------------------------------------------#
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        EnvironmentVariables:
          - Name: PACKAGED_TEMPLATE_FILE_PATH
            Value: !Ref PACKAGED_TEMPLATE_FILE_PATH
          - Name: S3_BUCKET
            Value: !Ref ArtifactStoreBucket
      Name: !Ref BuildName
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref BuildSpec

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsAccess
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*

              - Sid: S3Access
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactStoreBucket}
                  - !Sub arn:aws:s3:::${ArtifactStoreBucket}/*

              - Sid: CloudFormationAccess
                Effect: Allow
                Action: cloudformation:ValidateTemplate
                Resource: "*"
# ------------------------------------------------------------#
#  CodeDeploy
# ------------------------------------------------------------#
  PipelineDev:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref ModuleName
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InmputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                RepositoryName: !ImportValue cfn-codecommit-inamura-name
                BranchName: master
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Build
          Actions:
            - InputArtifacts:
                - Name: SourceOutput
              Name: Package
              ActionTypeId:
                Category: Build
                Provider: CodeBuild
                Owner: AWS
                Version: 1
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref BuildName

        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt PipelineDeployRole.Arn
                StackName: !Ref DevModuleStackName
                ChangeSetName: !Sub ${DevModuleStackName}-changeset
                Capabilities: CAPABILITY_NAMED_IAM

#################ここから構築スタート
参考URL 
https://qiita.com/ytaka95/items/5899c44c85e71fdc5273#param_devjson-param_prodjson
https://www.protosolution.co.jp/approach/story/20211221.html
https://qiita.com/leomaro7/items/41cbe8aa7c32298ec665
https://dev.classmethod.jp/articles/delivery-by-codepipeline-codecommit-codebuild-codedeploy/#toc-7
https://dev.classmethod.jp/articles/cross-account-codecommit-codepipeline-with-cfn/

                TemplatePath: !Sub BuildOutput::${PACKAGED_TEMPLATE_FILE_PATH}
                TemplateConfiguration: !Sub BuildOutput::${DevDeployParamFile}
              RunOrder: '1'

            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${DevModuleStackName}-changeset
                StackName: !Ref DevModuleStackName
              RunOrder: '2'

  PipelineDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: cloudformation.amazonaws.com
      Path: /
      Policies:
        - PolicyName: !Sub ${ModuleName}DeployPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
              - Effect: Allow
                Action:
                  - lambda:*
                Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*
              - Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRole
                  - iam:PassRole
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                  - iam:GetRolePolicy
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*
              - Effect: Allow
                Action: s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactStoreBucket}
                  - !Sub arn:aws:s3:::${ArtifactStoreBucket}/*




------------------------------------------------------------#
Output Parameters
------------------------------------------------------------#          
Outputs:
  CodeCommitArn:
    Value: !GetAtt CodeCommit.Arn
    Export:
      Name: !Sub "${RepositoryName}-arn"
  RepositoryName:
    Value: !Ref RepositoryName
    Export:
      Name: !Sub "${RepositoryName}-name"